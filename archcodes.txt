const { SlashCommandBuilder, EmbedBuilder, embedLength } = require('discord.js');
const puppeteer = require('puppeteer');

module.exports = {
    data: new SlashCommandBuilder()
    .setName('chatgpt-test')
    .setDescription("Chatgpt")
    .addStringOption(option => option.setName('prompt').setDescription('The prompt for the ai').setRequired(true)),
    async execute (interaction) {

        await interaction.reply({ content: `ðŸ§  Loading your response... this takes 20-30 seconds!`, ephemeral: true });

        const input = interaction.options.getString('prompt');

        const browser = await puppeteer.launch({ headless: false });
        const page = await browser.newPage();
    
        await page.goto('https://chat-app-f2d296.zapier.app/');
    
        const textBoxSelector = 'textarea[aria-label="chatbot-user-prompt"]';
        await page.waitForSelector(textBoxSelector);
        await page.type(textBoxSelector, input);
    
        await page.keyboard.press("Enter");
    
        await page.waitForSelector('[data-testid="final-bot-response"] p');
    
        var array = await page.evaluate(async () => {
            const texts = Array.from(document.querySelectorAll('p'));
            return texts.map(p => p.textContent.trim());
        });

        var value = await page.$eval('[data-testid="final-bot-response"] p', async (element) => {
            return element.textContent;
        });

        await browser.close();

        var string = array.toString();
        string = string.replace('Jackson,,', '');
        string = string.replace(`${input},Jackson,`, '');
        string = string.replace(`,,,/`, '');

        console.log(array)
        console.log(string);

        const embed = new EmbedBuilder()
        .setColor("Blurple")
        .setDescription(value)

        await interaction.editReply({ content: '', embeds: [embed] }); 
    }
}



const { SlashCommandBuilder, EmbedBuilder, ButtonBuilder, ActionRowBuilder, ButtonStyle } = require('discord.js');
const puppeteer = require('puppeteer');

module.exports = {
    data: new SlashCommandBuilder()
    .setName('discordjs-docs')
    .setDescription('Query the djs docs')
    .addStringOption(option => option.setName('query').setDescription('The thing to find in the docs').setRequired(true)),
    async execute (interaction) {

        const { options } = interaction;
        const query = options.getString('query');
        await interaction.deferReply({ ephemeral: true });

        const browser = await puppeteer.launch({ headless: true });
        const page = await browser.newPage();

        await page.goto('https://old.discordjs.dev/#/docs/discord.js/main/general/welcome');

        await page.waitForSelector('input#search');
        await page.type('input#search', query);

        await page.waitForTimeout(2000)
        await page.keyboard.press('Enter');

        await page.waitForSelector('div > ul.no-list');

        const values = await page.evaluate(() => {
            const div = document.querySelector('div > ul.no-list');
            const listItems = div.querySelectorAll('li');

            const valuesArray = [];
            listItems.forEach((li) => {
                const text = li.innerText;
                const link = `https://old.discordjs.dev/${li.querySelector('a').getAttribute('href')}`;
                valuesArray.push({ text, link });
            });

            return valuesArray;
        });

        await browser.close();

        async function getValues (num) {
            const output = values.slice(0, num);
            const format = output.map(item => `[${item.text.replace('\n', '').substring(1)}](${item.link})\n`);
            return format;
        };

        const button = new ActionRowBuilder()
        .addComponents(
            new ButtonBuilder()
            .setLabel('Load More')
            .setStyle(ButtonStyle.Primary)
            .setCustomId('djsload'),

            new ButtonBuilder()
            .setLabel('Full List')
            .setStyle(ButtonStyle.Link)
            .setURL(`https://old.discordjs.dev/#/docs/discord.js/14.11.0/search?query=${query}`)
        );
        
        const finalOutput = await getValues(10);
        const embed = new EmbedBuilder()
        .setColor("Blurple")
        .setTitle(`Discord.js Documentation Query: ${query}`)
        .setDescription(finalOutput.join(''))
        .setFooter({ text: `Loaded 10 values`});

        const msg = await interaction.editReply({ embeds: [embed], components: [button] });
        const collector = await msg.createMessageComponentCollector();

        var num = 20;
        collector.on('collect', async i => {
            if (i.customId == 'djsload') {
                if (num == 40) return await i.reply({ content: `I can't load anymore values...`, ephemeral: true });

                const newOutput = await getValues(num);
                embed.setDescription(newOutput.join(''));
                embed.setFooter({ text: `Loaded ${num} values`});
                await interaction.editReply({ embeds: [embed], components: [button] });
                await i.reply({ content: `Loaded 10 more values!`, ephemeral: true });

                num += 10;
            }
        });

    }
}